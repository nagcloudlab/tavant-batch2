[
{
  "name":"apple.security.AppleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"boolean",
  "allDeclaredMethods":true
},
{
  "name":"boolean[]"
},
{
  "name":"byte[]"
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.Appender"
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"char[]"
},
{
  "name":"com.fasterxml.jackson.annotation.JacksonAnnotation",
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude",
  "allDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.JsonDeserializer[]"
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer[]"
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]"
},
{
  "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.github.dockerjava.api.command.AsyncDockerCmd",
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.CreateContainerCmd",
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.CreateContainerResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.DockerCmd",
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.ExecCreateCmd",
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.ExecCreateCmdResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.ExecStartCmd",
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.command.GraphData",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.GraphDriver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.HealthState",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.HealthStateLog",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse$ContainerState",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse$Mount",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectContainerResponse$Node",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectExecResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectExecResponse$Container",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectExecResponse$ProcessConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.InspectImageResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.RootFS",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.command.SyncDockerCmd",
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.AccessMode",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.AuthConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Bind",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.BindOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.BindPropagation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.Bind[]"
},
{
  "name":"com.github.dockerjava.api.model.Binds",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.BlkioRateDevice",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.BlkioWeightDevice",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Capability",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.Capability[]"
},
{
  "name":"com.github.dockerjava.api.model.ClusterInfo",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ContainerConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ContainerNetwork",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ContainerNetwork$Ipam",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Device",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.DeviceRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Device[]"
},
{
  "name":"com.github.dockerjava.api.model.Driver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ExposedPort",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ExposedPort[]"
},
{
  "name":"com.github.dockerjava.api.model.ExposedPorts",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ExternalCA",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.ExternalCAProtocol",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.HealthCheck",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.HostConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Image",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Info",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.InfoRegistryConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.InfoRegistryConfig$IndexConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.InternetProtocol",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.Isolation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.Link",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Link[]"
},
{
  "name":"com.github.dockerjava.api.model.Links",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.LocalNodeState",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.LogConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.LogConfig$LoggingType",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.LxcConf",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.LxcConf[]"
},
{
  "name":"com.github.dockerjava.api.model.Mount",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.MountType",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.NetworkSettings",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.PeerNode",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.PortBinding[]"
},
{
  "name":"com.github.dockerjava.api.model.Ports",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Ports$Binding",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Ports$Binding[]"
},
{
  "name":"com.github.dockerjava.api.model.PropagationMode",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.ResourceVersion",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.RestartPolicy",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SELContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmCAConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmDispatcherConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmInfo",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmOrchestration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmRaftConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.SwarmSpec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.TaskDefaults",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.TmpfsOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Ulimit",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Ulimit[]"
},
{
  "name":"com.github.dockerjava.api.model.Version",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VersionComponent",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VersionPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.Volume",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeBind",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeBind[]"
},
{
  "name":"com.github.dockerjava.api.model.VolumeBinds",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeRW",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumeRW[]"
},
{
  "name":"com.github.dockerjava.api.model.Volume[]"
},
{
  "name":"com.github.dockerjava.api.model.Volumes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumesFrom",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.dockerjava.api.model.VolumesFrom[]"
},
{
  "name":"com.github.dockerjava.api.model.VolumesRW",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.jayway.jsonpath.JsonPath"
},
{
  "name":"com.mongodb.MongoClientSettings",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.mongodb.WriteConcern",
  "allPublicFields":true
},
{
  "name":"com.mongodb.annotations.Immutable",
  "allDeclaredMethods":true
},
{
  "name":"com.mongodb.connection.netty.NettyStream$1"
},
{
  "name":"com.mongodb.connection.netty.NettyStream$InboundBufferHandler",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"com.mongodb.event.CommandListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.mongodb.event.ConnectionPoolListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.mongodb.lang.Nullable",
  "allDeclaredMethods":true
},
{
  "name":"com.mongodb.reactivestreams.client.MongoClient",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.mongodb.reactivestreams.client.internal.MongoClientImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.sun.jna.CallbackProxy",
  "methods":[{"name":"callback","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"com.sun.jna.Structure$FFIType",
  "allDeclaredFields":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.Structure$FFIType$size_t",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "allPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "allPublicMethods":true
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "allPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "methods":[
    {"name":"getProcessCpuLoad","parameterTypes":[] }, 
    {"name":"getSystemCpuLoad","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "allPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "allPublicMethods":true,
  "methods":[
    {"name":"getMaxFileDescriptorCount","parameterTypes":[] }, 
    {"name":"getOpenFileDescriptorCount","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.VMOption",
  "allPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "allPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "allPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "allPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "allPublicConstructors":true
},
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.xml.internal.stream.XMLInputFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"double[]"
},
{
  "name":"float[]"
},
{
  "name":"int[]"
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.DefaultMongoCommandTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.DefaultMongoConnectionPoolTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleConfig",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.lang.NonNullApi",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.core.lang.NonNullFields",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.core.lang.Nullable",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.prometheus.PrometheusMeterRegistry"
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.buffer.ByteBuf"
},
{
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.DefaultFileRegion"
},
{
  "name":"io.netty.channel.SimpleChannelInboundHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.epoll.Epoll"
},
{
  "name":"io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
},
{
  "name":"io.netty.channel.nio.NioEventLoopGroup"
},
{
  "name":"io.netty.channel.socket.SocketChannel"
},
{
  "name":"io.netty.channel.socket.nio.NioSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.unix.PeerCredentials"
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
},
{
  "name":"io.netty.handler.codec.http.HttpClientCodec"
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecoder",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecompressor"
},
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$1"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$3"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.NettyRuntime"
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.NativeLibraryUtil",
  "methods":[{"name":"loadLibrary","parameterTypes":["java.lang.String","boolean"] }]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.swagger.v3.core.converter.ModelConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.swagger.v3.core.converter.ModelConverters",
  "fields":[{"name":"converters"}]
},
{
  "name":"io.swagger.v3.core.filter.SpecFilter"
},
{
  "name":"io.swagger.v3.core.jackson.ApiResponsesSerializer"
},
{
  "name":"io.swagger.v3.core.jackson.PathsSerializer"
},
{
  "name":"io.swagger.v3.core.jackson.mixin.ComponentsMixin"
},
{
  "name":"io.swagger.v3.core.jackson.mixin.ExtensionsMixin"
},
{
  "name":"io.swagger.v3.core.jackson.mixin.OpenAPIMixin"
},
{
  "name":"io.swagger.v3.core.jackson.mixin.OperationMixin"
},
{
  "name":"io.swagger.v3.core.jackson.mixin.SchemaMixin"
},
{
  "name":"io.swagger.v3.oas.annotations.ExternalDocumentation"
},
{
  "name":"io.swagger.v3.oas.annotations.Hidden",
  "allDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.OpenAPIDefinition"
},
{
  "name":"io.swagger.v3.oas.annotations.Operation"
},
{
  "name":"io.swagger.v3.oas.annotations.Parameter"
},
{
  "name":"io.swagger.v3.oas.annotations.callbacks.Callbacks"
},
{
  "name":"io.swagger.v3.oas.annotations.enums.SecuritySchemeType"
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.Extension"
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.ExtensionProperty"
},
{
  "name":"io.swagger.v3.oas.annotations.headers.Header"
},
{
  "name":"io.swagger.v3.oas.annotations.info.Info"
},
{
  "name":"io.swagger.v3.oas.annotations.links.Link"
},
{
  "name":"io.swagger.v3.oas.annotations.links.LinkParameter"
},
{
  "name":"io.swagger.v3.oas.annotations.media.ArraySchema"
},
{
  "name":"io.swagger.v3.oas.annotations.media.Content"
},
{
  "name":"io.swagger.v3.oas.annotations.media.DiscriminatorMapping"
},
{
  "name":"io.swagger.v3.oas.annotations.media.Encoding"
},
{
  "name":"io.swagger.v3.oas.annotations.media.ExampleObject"
},
{
  "name":"io.swagger.v3.oas.annotations.media.Schema"
},
{
  "name":"io.swagger.v3.oas.annotations.parameters.RequestBody"
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponse"
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlow"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlows"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthScope"
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityRequirement"
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityRequirements"
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityScheme"
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecuritySchemes"
},
{
  "name":"io.swagger.v3.oas.annotations.servers.Server"
},
{
  "name":"io.swagger.v3.oas.annotations.servers.ServerVariable"
},
{
  "name":"io.swagger.v3.oas.annotations.tags.Tag"
},
{
  "name":"io.swagger.v3.oas.models.Components"
},
{
  "name":"io.swagger.v3.oas.models.ExternalDocumentation"
},
{
  "name":"io.swagger.v3.oas.models.OpenAPI"
},
{
  "name":"io.swagger.v3.oas.models.Operation"
},
{
  "name":"io.swagger.v3.oas.models.PathItem"
},
{
  "name":"io.swagger.v3.oas.models.Paths"
},
{
  "name":"io.swagger.v3.oas.models.info.Info"
},
{
  "name":"io.swagger.v3.oas.models.links.Link"
},
{
  "name":"io.swagger.v3.oas.models.links.LinkParameter"
},
{
  "name":"io.swagger.v3.oas.models.media.ArraySchema"
},
{
  "name":"io.swagger.v3.oas.models.media.BooleanSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.Content"
},
{
  "name":"io.swagger.v3.oas.models.media.DateTimeSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.Discriminator"
},
{
  "name":"io.swagger.v3.oas.models.media.FileSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.IntegerSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.MapSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.MediaType"
},
{
  "name":"io.swagger.v3.oas.models.media.ObjectSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.Schema"
},
{
  "name":"io.swagger.v3.oas.models.media.StringSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.UUIDSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.XML"
},
{
  "name":"io.swagger.v3.oas.models.parameters.Parameter"
},
{
  "name":"io.swagger.v3.oas.models.parameters.RequestBody"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponse"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.models.security.OAuthFlow"
},
{
  "name":"io.swagger.v3.oas.models.security.OAuthFlows"
},
{
  "name":"io.swagger.v3.oas.models.security.Scopes"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityRequirement"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme"
},
{
  "name":"io.swagger.v3.oas.models.servers.Server"
},
{
  "name":"io.swagger.v3.oas.models.servers.ServerVariable"
},
{
  "name":"io.swagger.v3.oas.models.servers.ServerVariables"
},
{
  "name":"io.swagger.v3.oas.models.tags.Tag"
},
{
  "name":"java.beans.PropertyVetoException"
},
{
  "name":"java.io.Closeable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.io.File",
  "methods":[{"name":"toPath","parameterTypes":[] }]
},
{
  "name":"java.io.FileDescriptor"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.io.Serializable[]"
},
{
  "name":"java.lang.AutoCloseable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.CharSequence[]"
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character[]"
},
{
  "name":"java.lang.Class",
  "allDeclaredMethods":true,
  "methods":[
    {"name":"forName","parameterTypes":["java.lang.String"] }, 
    {"name":"getAnnotatedInterfaces","parameterTypes":[] }, 
    {"name":"getAnnotatedSuperclass","parameterTypes":[] }, 
    {"name":"getModule","parameterTypes":[] }, 
    {"name":"getNestHost","parameterTypes":[] }, 
    {"name":"getNestMembers","parameterTypes":[] }, 
    {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"java.lang.ClassLoader",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.ClassLoader$ByteBuddyAccessor$gEreVPvL",
  "methods":[
    {"name":"defineClass","parameterTypes":["java.lang.ClassLoader","java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }, 
    {"name":"definePackage","parameterTypes":["java.lang.ClassLoader","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.net.URL"] }, 
    {"name":"findLoadedClass","parameterTypes":["java.lang.ClassLoader","java.lang.String"] }, 
    {"name":"getClassLoadingLock","parameterTypes":["java.lang.ClassLoader","java.lang.String"] }, 
    {"name":"getDefinedPackage","parameterTypes":["java.lang.ClassLoader","java.lang.String"] }, 
    {"name":"getPackage","parameterTypes":["java.lang.ClassLoader","java.lang.String"] }
  ]
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.Cloneable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Comparable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Comparable[]"
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Enum",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Iterable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Long",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addExports","parameterTypes":["java.lang.String","java.lang.Module"] }, 
    {"name":"addOpens","parameterTypes":["java.lang.String","java.lang.Module"] }, 
    {"name":"addReads","parameterTypes":["java.lang.Module"] }, 
    {"name":"canRead","parameterTypes":["java.lang.Module"] }, 
    {"name":"getClassLoader","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, 
    {"name":"isExported","parameterTypes":["java.lang.String"] }, 
    {"name":"isExported","parameterTypes":["java.lang.String","java.lang.Module"] }, 
    {"name":"isNamed","parameterTypes":[] }, 
    {"name":"isOpen","parameterTypes":["java.lang.String","java.lang.Module"] }
  ]
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Object[]"
},
{
  "name":"java.lang.Runnable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "allPublicMethods":true
},
{
  "name":"java.lang.String",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.String[]"
},
{
  "name":"java.lang.Throwable",
  "allDeclaredFields":true,
  "methods":[
    {"name":"addSuppressed","parameterTypes":["java.lang.Throwable"] }, 
    {"name":"getSuppressed","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.annotation.Annotation[]"
},
{
  "name":"java.lang.annotation.Documented",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Target",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.instrument.Instrumentation",
  "methods":[
    {"name":"isModifiableModule","parameterTypes":["java.lang.Module"] }, 
    {"name":"redefineModule","parameterTypes":["java.lang.Module","java.util.Set","java.util.Map","java.util.Map","java.util.Set","java.util.Map"] }
  ]
},
{
  "name":"java.lang.invoke.MethodHandle"
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"defineClass","parameterTypes":["byte[]"] }]
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.MonitorInfo",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "allPublicMethods":true
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "allPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.AccessibleObject",
  "fields":[{"name":"override", "allowUnsafeAccess":true}]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[{"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[
    {"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, 
    {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, 
    {"name":"getAnnotatedReceiverType","parameterTypes":[] }, 
    {"name":"getParameterCount","parameterTypes":[] }, 
    {"name":"getParameters","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Field",
  "methods":[{"name":"getAnnotatedType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.Method",
  "methods":[
    {"name":"getAnnotatedReturnType","parameterTypes":[] }, 
    {"name":"isVarArgs","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"isNamePresent","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Type",
  "allPublicMethods":true
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger",
  "allDeclaredMethods":true
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketOption"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.StandardSocketOptions",
  "fields":[
    {"name":"IP_MULTICAST_IF"}, 
    {"name":"IP_MULTICAST_LOOP"}, 
    {"name":"IP_MULTICAST_TTL"}
  ]
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "methods":[{"name":"unaligned","parameterTypes":[] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address", "allowUnsafeAccess":true}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.FileChannel"
},
{
  "name":"java.nio.channels.NetworkChannel",
  "methods":[
    {"name":"getOption","parameterTypes":["java.net.SocketOption"] }, 
    {"name":"setOption","parameterTypes":["java.net.SocketOption","java.lang.Object"] }
  ]
},
{
  "name":"java.nio.file.CopyOption"
},
{
  "name":"java.nio.file.CopyOption[]"
},
{
  "name":"java.nio.file.Files",
  "methods":[{"name":"move","parameterTypes":["java.nio.file.Path","java.nio.file.Path","java.nio.file.CopyOption[]"] }]
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.StandardCopyOption"
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureClassLoader",
  "allDeclaredMethods":true
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.util.ArrayList",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Date",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Dictionary",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.EventListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.HashSet"
},
{
  "name":"java.util.Hashtable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.LinkedHashMap",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.LinkedHashSet"
},
{
  "name":"java.util.Map",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.Map$Entry[]"
},
{
  "name":"java.util.Properties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.concurrent.Executor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.concurrent.Flow$Publisher"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.function.Consumer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.function.Function",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.function.Supplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "allPublicMethods":true
},
{
  "name":"javax.activation.MimeType"
},
{
  "name":"javax.annotation.ManagedBean"
},
{
  "name":"javax.annotation.Nonnull",
  "allDeclaredMethods":true
},
{
  "name":"javax.annotation.Nullable",
  "allDeclaredMethods":true
},
{
  "name":"javax.annotation.Resource"
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "allDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "allDeclaredMethods":true
},
{
  "name":"javax.management.MBeanOperationInfo",
  "allPublicMethods":true
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.CompositeData[]"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.net.ssl.SSLParameters",
  "methods":[{"name":"setApplicationProtocols","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"javax.net.ssl.SSLSocket",
  "methods":[{"name":"getApplicationProtocol","parameterTypes":[] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.sql.DataSource"
},
{
  "name":"javax.validation.Validator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.validation.ValidatorFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.validation.bootstrap.GenericBootstrap"
},
{
  "name":"javax.validation.constraints.Min",
  "allDeclaredMethods":true
},
{
  "name":"javax.validation.executable.ExecutableValidator"
},
{
  "name":"javax.xml.bind.Binder"
},
{
  "name":"jdk.internal.loader.BuiltinClassLoader",
  "allDeclaredMethods":true
},
{
  "name":"jdk.internal.loader.ClassLoaders$AppClassLoader",
  "allDeclaredMethods":true
},
{
  "name":"jdk.internal.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.lang.ClassLoader","java.security.ProtectionDomain"] }, 
    {"name":"getUnsafe","parameterTypes":[] }
  ]
},
{
  "name":"jdk.internal.reflect.ConstantPool",
  "methods":[
    {"name":"getMethodAt","parameterTypes":["int"] }, 
    {"name":"getSize","parameterTypes":[] }
  ]
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "allPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "allPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "allPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "allPublicConstructors":true
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "allPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "allPublicMethods":true
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.Unit"
},
{
  "name":"kotlin.coroutines.Continuation"
},
{
  "name":"kotlin.jvm.functions.Function0"
},
{
  "name":"long[]"
},
{
  "name":"org.aopalliance.aop.Advice",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.Interceptor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.apache.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.serialization.ByteArrayDeserializer"
},
{
  "name":"org.apache.kafka.common.serialization.ByteArraySerializer"
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfo",
  "allPublicConstructors":true
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean",
  "allPublicMethods":true
},
{
  "name":"org.apache.logging.log4j.LogManager"
},
{
  "name":"org.apache.logging.log4j.Logger"
},
{
  "name":"org.apache.logging.log4j.message.DefaultFlowMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.message.ReusableMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.spi.AbstractLogger"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JLoggerContextFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.bson.types.ObjectId",
  "allDeclaredMethods":true
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForDouble",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForInteger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.reactivestreams.Subscriber",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger"
},
{
  "name":"org.springdoc.core.CacheOrGroupedOpenApiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.Constants"
},
{
  "name":"org.springdoc.core.GenericParameterService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.GroupedOpenApi"
},
{
  "name":"org.springdoc.core.MultipleOpenApiGroupsCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.MultipleOpenApiSupportCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.OpenAPIService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.OperationService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.PropertyResolverUtils",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.RequestBodyService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.ReturnTypeParser",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.SecurityService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.SpringDocConfigProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.SpringDocConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.SpringDocConfiguration$1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.SpringDocConfiguration$OpenApiResourceAdvice",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.SpringDocConfiguration$WebConversionServiceConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.SpringDocHints",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.WebConversionServiceProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.converters.AdditionalModelsConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.converters.FileSupportConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.converters.ModelConverterRegistrar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.converters.PolymorphicModelConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.converters.PropertyCustomizingConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.converters.ResponseSupportConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.SpringProxy",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.Advised",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.aot.StaticSpringFactories"
},
{
  "name":"org.springframework.beans.ExtendedBeanInfoFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.Aware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactory"
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.ListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.ObjectProvider"
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.PropertiesFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.LazyInitializationExcludeFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$$Lambda$1733/0x0000000840a5b840",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$$Lambda$1734/0x0000000840a5bc40",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration$$Lambda$1732/0x0000000840a5b440",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration$$Lambda$1528/0x000000084099fc40",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration$$Lambda$1527/0x000000084099f840",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.WebClientMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.mongo.MongoReactiveHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint"
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint"
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealthContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.EnvironmentInfoContributor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.InfoContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint"
},
{
  "name":"org.springframework.boot.actuate.integration.IntegrationGraphEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint"
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint"
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.DefaultWebClientExchangeTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.WebClientExchangeTagsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.server.DefaultWebFluxTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.mongo.MongoReactiveHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.mongodb.core.ReactiveMongoTemplate"] }]
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
},
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceRepository"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ImportAutoConfiguration",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.codec.CodecProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.ConditionalOnRepositoryType",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.OnRepositoryTypeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.RepositoryType"
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration$$Lambda$1539/0x00000008409b3840",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration$$Lambda$1540/0x00000008409b3c40",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationComponentScanConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration$EnableIntegrationManagementConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationRSocketConfiguration$AnyRSocketChannelAdapterAvailable",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationTaskSchedulerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfigurationScanRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaConsumerFactoryCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaProducerFactoryCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaStreamsAnnotationDrivenConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.StreamsBuilderFactoryBeanCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoClientSettingsBuilderCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoPropertiesClientSettingsBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$MongoClientSettingsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverMongoClientSettingsBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ResourceProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$HttpClient5"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JettyClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocation[]"
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.BindResult"
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer"
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$1120/0x000000084074e040",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.codec.CodecCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebApplicationContext"
},
{
  "name":"org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorAttributes",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ReactiveWebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name":"org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cglib.proxy.Enhancer$EnhancerKey",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cglib.proxy.Enhancer$EnhancerKey$$KeyFactoryByCGLIB$$4ce19e8f",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.function.cloudevent.CloudEventsFunctionExtensionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.function.cloudevent.CloudEventsFunctionInvocationHelper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.context.FunctionCatalog",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.context.FunctionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.function.context.FunctionRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.context.catalog.BeanFactoryAwareFunctionRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.context.catalog.FunctionInspector",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$JsonMapperConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$PlainFunctionScanConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.function.context.config.ContextFunctionCatalogInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.function.context.config.FluxWrapperDetector",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$EnhancerBySpringCGLIB$$c8992025",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}]
},
{
  "name":"org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$EnhancerBySpringCGLIB$$c8992025$$FastClassBySpringCGLIB$$49b5a71a",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$FastClassBySpringCGLIB$$5615c455",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.function.context.config.RoutingFunction",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.core.FunctionInvocationHelper",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.json.JacksonMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.function.json.JsonMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.annotation.EnableBinding",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.annotation.StreamMessageConverter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.annotation.StreamRetryTemplate",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.AbstractBinder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"applyPrefix","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"bindConsumer","parameterTypes":["java.lang.String","java.lang.String","java.lang.Object","org.springframework.cloud.stream.binder.ConsumerProperties"] }, 
    {"name":"bindProducer","parameterTypes":["java.lang.String","java.lang.Object","org.springframework.cloud.stream.binder.ProducerProperties"] }, 
    {"name":"constructDLQName","parameterTypes":["java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.cloud.stream.binder.AbstractExtendedBindingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getExtendedConsumerProperties","parameterTypes":["java.lang.String"] }, 
    {"name":"getExtendedProducerProperties","parameterTypes":["java.lang.String"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setBindings","parameterTypes":["java.util.Map"] }
  ]
},
{
  "name":"org.springframework.cloud.stream.binder.AbstractMessageChannelBinder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"bindPollableConsumer","parameterTypes":["java.lang.String","java.lang.String","org.springframework.cloud.stream.binder.PollableSource","org.springframework.cloud.stream.binder.ConsumerProperties"] }, 
    {"name":"doBindConsumer","parameterTypes":["java.lang.String","java.lang.String","org.springframework.messaging.MessageChannel","org.springframework.cloud.stream.binder.ConsumerProperties"] }, 
    {"name":"doBindProducer","parameterTypes":["java.lang.String","org.springframework.messaging.MessageChannel","org.springframework.cloud.stream.binder.ProducerProperties"] }, 
    {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, 
    {"name":"setConsumerEndpointCustomizer","parameterTypes":["org.springframework.cloud.stream.config.ConsumerEndpointCustomizer"] }, 
    {"name":"setProducerMessageHandlerCustomizer","parameterTypes":["org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer"] }
  ]
},
{
  "name":"org.springframework.cloud.stream.binder.Binder",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.BinderFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.BinderTypeRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.ConsumerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.binder.DefaultBinderFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.DefaultBinderFactory$Listener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.DefaultBinderTypeRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.ExtendedBindingProperties",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.ExtendedConsumerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.binder.ExtendedPropertiesBinder",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.PollableConsumerBinder",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.KafkaBinderEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.KafkaBinderHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.KafkaBinderMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.KafkaMessageChannelBinder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.KafkaNullConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.ClientFactoryCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$EnhancerBySpringCGLIB$$91e6bc04",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$EnhancerBySpringCGLIB$$91e6bc04$$FastClassBySpringCGLIB$$1fbaee73",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$FastClassBySpringCGLIB$$5f5d2354",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda$1462/0x0000000840968040",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$$EnhancerBySpringCGLIB$$e903bf24",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"jaasInitializer","parameterTypes":["org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$$EnhancerBySpringCGLIB$$e903bf24$$FastClassBySpringCGLIB$$dcfe0fc2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$$FastClassBySpringCGLIB$$a310e274",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$JaasConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration$$EnhancerBySpringCGLIB$$f52d30c3",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"kafkaBinderMetrics","parameterTypes":["org.springframework.cloud.stream.binder.kafka.KafkaMessageChannelBinder","org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties","io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration$$EnhancerBySpringCGLIB$$f52d30c3$$FastClassBySpringCGLIB$$e720f574",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration$$FastClassBySpringCGLIB$$aa71f33",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration$KafkaMicrometer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfiguration$KafkaMicrometer$1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"configure","parameterTypes":["org.springframework.kafka.core.ConsumerFactory"] }, 
    {"name":"configure","parameterTypes":["org.springframework.kafka.core.ProducerFactory"] }
  ]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfigurationWithMultiBinder",
  "allDeclaredMethods":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration$KafkaBinderMetricsConfigurationWithMultiBinder$KafkaMicrometer",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderHealthIndicatorConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderHealthIndicatorConfiguration$$EnhancerBySpringCGLIB$$53f1cd35",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"kafkaBinderHealthIndicator","parameterTypes":["org.springframework.cloud.stream.binder.kafka.KafkaMessageChannelBinder","org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderHealthIndicatorConfiguration$$EnhancerBySpringCGLIB$$53f1cd35$$FastClassBySpringCGLIB$$75625720",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.config.KafkaBinderHealthIndicatorConfiguration$$FastClassBySpringCGLIB$$6ecfdf65",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.properties.KafkaBindingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.properties.KafkaConsumerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.properties.KafkaExtendedBindingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getBindings","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.properties.KafkaProducerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.properties.KafkaTopicProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.stream.binder.kafka.provisioning.KafkaTopicProvisioner",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.AbstractBindableProxyFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.AbstractBindingLifecycle",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.AbstractBindingTargetFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.Bindable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.BindableProxyFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.BinderAwareChannelResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.BinderAwareRouter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.BindingService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.BindingTargetFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.BindingsLifecycleController",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.CompositeMessageChannelConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.ContextStartAfterRefreshListener",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.DynamicDestinationsBindable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.InputBindingLifecycle",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.MessageChannelAndSourceConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.MessageChannelConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.MessageChannelStreamListenerResultAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.MessageConverterConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.MessageSourceBindingTargetFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.OutputBindingLifecycle",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.StreamListenerAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.StreamListenerResultAdapter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.binding.SubscribableChannelBindingTargetFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.BinderFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingBeansRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingHandlerAdvise",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingHandlerAdvise$MappingsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingHandlerAdvise$MappingsProvider[]"
},
{
  "name":"org.springframework.cloud.stream.config.BindingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.stream.config.BindingServiceConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingServiceConfiguration$1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingServiceConfiguration$2",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingServiceProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.BindingsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.ChannelBindingAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.ChannelsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.ContentTypeConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.DefaultPollerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.config.SpringIntegrationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.endpoint.BindingsEndpoint"
},
{
  "name":"org.springframework.cloud.stream.endpoint.ChannelsEndpoint"
},
{
  "name":"org.springframework.cloud.stream.function.BindableFunctionProxyFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.function.FunctionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.stream.function.FunctionConfiguration$1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.function.FunctionConfiguration$FunctionBindingRegistrar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.function.FunctionConfiguration$FunctionToDestinationBinder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.function.RoutingFunctionEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.function.StreamBridge",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.function.StreamFunctionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.stream.messaging.DirectWithAttributesChannel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cloud.stream.micrometer.DestinationPublishingMetricsAutoConfiguration"
},
{
  "name":"org.springframework.cloud.stream.provisioning.ProvisioningProvider",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationContext"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.Phased",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.SmartLifecycle",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.annotation.Bean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter[]"
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.DependsOn",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.FilterType"
},
{
  "name":"org.springframework.context.annotation.Import",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.PropertySource"
},
{
  "name":"org.springframework.context.annotation.Role",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListener",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.support.ConversionServiceFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.core.DecoratingProxy",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.LocalVariableTableParameterNameDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.Ordered",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.ParameterNameDiscoverer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.ReactiveAdapterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.AnnotationAttributes[]"
},
{
  "name":"org.springframework.core.annotation.Order",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.TypeMappedAnnotation[]"
},
{
  "name":"org.springframework.core.convert.ConversionService",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.Converter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.DefaultConversionService",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.env.Environment"
},
{
  "name":"org.springframework.core.io.InputStreamSource[]"
},
{
  "name":"org.springframework.core.io.Resource",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.io.Resource[]",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.io.buffer.DataBufferFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.io.buffer.DefaultDataBufferFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.task.TaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.type.AnnotationMetadata"
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.annotation.Id",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.Persistent",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.Version",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.convert.CustomConversions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityReader",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityWriter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyAccessor"
},
{
  "name":"org.springframework.data.mapping.callback.EntityCallback",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$ObjectInstantiator"
},
{
  "name":"org.springframework.data.mongodb.CodecRegistryProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.ReactiveMongoDatabaseFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.MongoTemplate"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveAggregationOperation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveChangeStreamOperation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveFindOperation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveFluentMongoOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveInsertOperation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMapReduceOperation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveRemoveOperation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveUpdateOperation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.convert.AbstractMongoConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.convert.MappingMongoConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.convert.MongoConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.convert.MongoCustomConversions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.convert.MongoWriter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.index.Indexed",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.Document",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.MongoMappingContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.event.ReactiveAfterConvertCallback",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.event.ReactiveAfterSaveCallback",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.event.ReactiveBeforeConvertCallback",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.event.ReactiveBeforeSaveCallback",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.gridfs.GridFsOperationsSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.gridfs.ReactiveGridFsOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.gridfs.ReactiveGridFsTemplate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.repository.ReactiveMongoRepository",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.mongodb.repository.config.EnableReactiveMongoRepositories",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.repository.config.ReactiveMongoRepositoryConfigurationExtension"
},
{
  "name":"org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.data.querydsl.QuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.repository.NoRepositoryBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.Repository",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.NamedQueries",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
  "allDeclaredMethods":true,
  "methods":[
    {"name":"empty","parameterTypes":[] }, 
    {"name":"iterator","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryInformation",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.repository.query.QueryByExampleExecutor"
},
{
  "name":"org.springframework.data.repository.query.QueryLookupStrategy$Key",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.repository.reactive.ReactiveCrudRepository",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.repository.reactive.ReactiveSortingRepository",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.util.Streamable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver"
},
{
  "name":"org.springframework.expression.EvaluationContext",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.expression.spel.support.StandardEvaluationContext",
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getBeanResolver","parameterTypes":[] }, 
    {"name":"getConstructorResolvers","parameterTypes":[] }, 
    {"name":"getMethodResolvers","parameterTypes":[] }, 
    {"name":"getOperatorOverloader","parameterTypes":[] }, 
    {"name":"getPropertyAccessors","parameterTypes":[] }, 
    {"name":"getRootObject","parameterTypes":[] }, 
    {"name":"getTypeComparator","parameterTypes":[] }, 
    {"name":"getTypeConverter","parameterTypes":[] }, 
    {"name":"getTypeLocator","parameterTypes":[] }, 
    {"name":"lookupVariable","parameterTypes":["java.lang.String"] }, 
    {"name":"setVariable","parameterTypes":["java.lang.String","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.HttpStatus"
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.client.reactive.ClientHttpConnector"
},
{
  "name":"org.springframework.http.client.reactive.ReactorResourceFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.ClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.ServerCodecConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.support.BaseCodecConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.support.DefaultClientCodecConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.codec.support.DefaultServerCodecConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.IntegrationPattern",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.annotation.IntegrationComponentScan",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.integration.channel.AbstractExecutorChannel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.AbstractMessageChannel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.AbstractSubscribableChannel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.BroadcastCapableChannel",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.DefaultHeaderChannelRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.DirectChannel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.ExecutorChannelInterceptorAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.MessagePublishingErrorHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.NullChannel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.channel.PublishSubscribeChannel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.AbstractEvaluationContextFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.ConsumerEndpointFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.ConverterRegistrar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.CustomConversionServiceFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.EnableIntegration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.integration.config.EnableIntegrationManagement",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.integration.config.GlobalChannelInterceptorInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.integration.config.GlobalChannelInterceptorProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.IdGeneratorConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.IdempotentReceiverAutoProxyCreatorInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.integration.config.IntegrationConfigurationBeanFactoryPostProcessor"
},
{
  "name":"org.springframework.integration.config.IntegrationConverter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.integration.config.IntegrationConverterInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.integration.config.IntegrationEvaluationContextFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.IntegrationManagementConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.integration.config.IntegrationManagementConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.IntegrationRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.integration.config.IntegrationSimpleEvaluationContextFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.SpelFunctionFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.annotation.Disposables",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.context.ExpressionCapable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.context.IntegrationObjectSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.context.IntegrationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.context.Orderable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.core.ErrorMessagePublisher",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.dsl.BaseIntegrationFlowDefinition$ReplyProducerCleaner",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.dsl.context.DslIntegrationConfigurationInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.integration.dsl.context.IntegrationFlowBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.dsl.context.IntegrationFlowContext",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.dsl.context.StandardIntegrationFlowContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.expression.SpelPropertyAccessorRegistrar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.gateway.GatewayProxyFactoryBean"
},
{
  "name":"org.springframework.integration.graph.IntegrationGraphServer"
},
{
  "name":"org.springframework.integration.handler.AbstractMessageHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.handler.LoggingHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.handler.MessageHandlerSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.jmx.config.EnableIntegrationMBeanExport"
},
{
  "name":"org.springframework.integration.jmx.config.JmxIntegrationConfigurationInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.integration.json.JsonNodeWrapperToJsonNodeConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.json.JsonPathUtils",
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.scheduling.PollerMetadata",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.DefaultMessageBuilderFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.MessageBuilderFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.SmartLifecycleRoleController",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.channel.BeanFactoryChannelResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.channel.HeaderChannelRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.context.NamedComponent",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.converter.DefaultDatatypeChannelMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.management.IntegrationManagedResource",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.integration.support.management.IntegrationManagement",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.management.ManageableLifecycle",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.management.SubscribableChannelManagement",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.management.TrackableComponent",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.management.metrics.MetricsCaptor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptorRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedAttribute",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedMetric",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.EnableKafka",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaBootstrapConfiguration",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerConfigurationSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.config.KafkaListenerContainerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpointRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.config.StreamsBuilderFactoryBean"
},
{
  "name":"org.springframework.kafka.core.ConsumerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaProducerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaAdmin",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaAdminOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaResourceFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.MicrometerConsumerListener"
},
{
  "name":"org.springframework.kafka.core.ProducerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.listener.ListenerContainerRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.support.LoggingProducerListener",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.kafka.support.ProducerListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.lang.NonNullApi"
},
{
  "name":"org.springframework.lang.Nullable"
},
{
  "name":"org.springframework.messaging.MessageChannel",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.MessageHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.MessageHeaders",
  "allDeclaredFields":true
},
{
  "name":"org.springframework.messaging.PollableChannel",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.SubscribableChannel",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.converter.AbstractMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"fromMessage","parameterTypes":["org.springframework.messaging.Message","java.lang.Class"] }, 
    {"name":"fromMessage","parameterTypes":["org.springframework.messaging.Message","java.lang.Class","java.lang.Object"] }, 
    {"name":"getContentTypeResolver","parameterTypes":[] }, 
    {"name":"getSerializedPayloadClass","parameterTypes":[] }, 
    {"name":"getSupportedMimeTypes","parameterTypes":[] }, 
    {"name":"isStrictContentTypeMatch","parameterTypes":[] }, 
    {"name":"setContentTypeResolver","parameterTypes":["org.springframework.messaging.converter.ContentTypeResolver"] }, 
    {"name":"setSerializedPayloadClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setStrictContentTypeMatch","parameterTypes":["boolean"] }, 
    {"name":"toMessage","parameterTypes":["java.lang.Object","org.springframework.messaging.MessageHeaders"] }, 
    {"name":"toMessage","parameterTypes":["java.lang.Object","org.springframework.messaging.MessageHeaders","java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.messaging.converter.CompositeMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.converter.MessageConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.converter.SmartMessageConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.core.BeanFactoryMessageChannelDestinationResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.core.DestinationResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.messaging.rsocket.RSocketRequester"
},
{
  "name":"org.springframework.messaging.support.InterceptableChannel",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.nativex.NativeListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.nativex.hint.FieldHint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.nativex.hint.MethodHint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.nativex.hint.ProxyHint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.nativex.hint.ProxyHints",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.nativex.hint.ResourceHint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.nativex.hint.TypeHint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.nativex.hint.TypeHints",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.scheduling.TaskScheduler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.stereotype.Component",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager"
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "allPublicFields":true
},
{
  "name":"org.springframework.transaction.TransactionManager"
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionalProxy",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.util.Assert"
},
{
  "name":"org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.util.ErrorHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.validation.SmartValidator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.validation.Validator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ControllerAdvice",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PathVariable",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestHeader",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestParam",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseStatus",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestControllerAdvice",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.WebApplicationContext"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.cors.reactive.PreFlightRequestHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
  "methods":[{"name":"noMatchingExceptionHandler","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerAdapter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerMapping",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.HandlerResultHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder$$Lambda$1577/0x00000008409d3c40",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.config.CorsRegistry"
},
{
  "name":"org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.config.EnableWebFlux",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.config.PathMatchConfigurer"
},
{
  "name":"org.springframework.web.reactive.config.ResourceHandlerRegistry"
},
{
  "name":"org.springframework.web.reactive.config.ViewResolverRegistry"
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurationSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient$Builder"
},
{
  "name":"org.springframework.web.reactive.function.server.HandlerFunction",
  "methods":[{"name":"handle","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }]
},
{
  "name":"org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.HandlerResultHandlerSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.SimpleHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.server.WebExceptionHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebHandler",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.adapter.HttpWebHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.handler.ResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.handler.WebHandlerDecorator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.i18n.LocaleContextResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.session.DefaultWebSessionManager",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.session.WebSessionManager",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.testcontainers.shaded.com.google.common.collect.ImmutableMapEntry[]"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.adapter.JdkFlowAdapter",
  "methods":[
    {"name":"flowPublisherToFlux","parameterTypes":["java.util.concurrent.Flow$Publisher"] }, 
    {"name":"publisherToFlowPublisher","parameterTypes":["org.reactivestreams.Publisher"] }
  ]
},
{
  "name":"reactor.core.CoreSubscriber",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.netty.ChannelOperationsId"
},
{
  "name":"reactor.netty.channel.ChannelOperationsHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"reactor.netty.http.client.HttpClient"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.netty.http.server.HttpServerResponse"
},
{
  "name":"reactor.netty.http.server.HttpTrafficHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"
},
{
  "name":"reactor.netty.transport.ServerTransport$Acceptor",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"reactor.netty.transport.ServerTransport$AcceptorInitializer"
},
{
  "name":"reactor.netty.transport.TransportConfig$TransportChannelInitializer"
},
{
  "name":"se.magnus.api.core.product.Product",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"se.magnus.api.core.product.ProductService",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"se.magnus.microservices.core.product.ProductServiceApplication",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allDeclaredClasses":true
},
{
  "name":"se.magnus.microservices.core.product.ProductServiceApplication$$EnhancerBySpringCGLIB$$52f68131",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}]
},
{
  "name":"se.magnus.microservices.core.product.persistence.ProductEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "fields":[
    {"name":"id", "allowUnsafeAccess":true}, 
    {"name":"name", "allowUnsafeAccess":true}, 
    {"name":"productId", "allowUnsafeAccess":true}, 
    {"name":"version", "allowUnsafeAccess":true}, 
    {"name":"weight", "allowUnsafeAccess":true}
  ]
},
{
  "name":"se.magnus.microservices.core.product.persistence.ProductEntity_Accessor_nvvau0",
  "allPublicConstructors":true
},
{
  "name":"se.magnus.microservices.core.product.persistence.ProductEntity_Accessor_xsnh4a",
  "allPublicConstructors":true
},
{
  "name":"se.magnus.microservices.core.product.persistence.ProductEntity_Instantiator_nvvau0",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"se.magnus.microservices.core.product.persistence.ProductEntity_Instantiator_xsnh4a",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"se.magnus.microservices.core.product.persistence.ProductRepository",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"se.magnus.microservices.core.product.services.MessageProcessorConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"se.magnus.microservices.core.product.services.MessageProcessorConfig$$EnhancerBySpringCGLIB$$c53e53e4",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}]
},
{
  "name":"se.magnus.microservices.core.product.services.MessageProcessorConfig$$EnhancerBySpringCGLIB$$c53e53e4$$FastClassBySpringCGLIB$$73d29756",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"se.magnus.microservices.core.product.services.MessageProcessorConfig$$FastClassBySpringCGLIB$$6b059f34",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"se.magnus.microservices.core.product.services.MessageProcessorConfig$$Lambda$1119/0x000000084074ec40",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"se.magnus.microservices.core.product.services.ProductMapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"se.magnus.microservices.core.product.services.ProductMapperImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"se.magnus.microservices.core.product.services.ProductServiceImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"se.magnus.util.http.GlobalControllerExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"se.magnus.util.http.HttpErrorInfo",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"se.magnus.util.http.ServiceUtil",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"short[]"
},
{
  "name":"sun.management.ClassLoadingImpl",
  "allPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "allPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "allPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "allPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "allPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "allPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "allPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "allPublicConstructors":true
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"allocateInstance","parameterTypes":["java.lang.Class"] }, 
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, 
    {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, 
    {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys", "allowUnsafeAccess":true}, 
    {"name":"selectedKeys", "allowUnsafeAccess":true}
  ]
},
{
  "name":"sun.security.pkcs.SignerInfo[]"
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]
